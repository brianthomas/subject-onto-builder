#!/usr/bin/perl -w

package IVOA::Ontology::Subject::CreateOntology;

use XML::LibXML();
use XML::LibXML::Common qw(:libxml);

# A program to build a subject Ontology from a 
# list of subjects

use constant RDF_NS_URI => 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';
use constant RDFS_NS_URI => 'http://www.w3.org/2000/01/rdf-schema#';
use constant OWL_NS_URI => 'http://www.w3.org/2002/07/owl#';
use constant XSD_NS_URI => 'http://www.w3.org/2001/XMLSchema#';
use constant XSI_NS_URI => 'http://www.w3.org/2001/XMLSchema-instance#';

my $SUBJECT_NS_URI = 'http://net.ivoa/vocabulary/1.0/registrySubject';
sub setSubjectNSURI { $SUBJECT_NS_URI = shift; }

my $ADD_SUBJECT_CLASS = 0;
sub setAddSubjectClass { $ADD_SUBJECT_CLASS = shift; }

my $DEBUG = 0;
sub setDebug { $DEBUG = shift; }
 
sub create {
  my (@subjects) = @_;

  my $Ontology_doc = &_print_preamble(XML::LibXML::Document->new('1.0','UTF-8'));

  foreach my $subject (@subjects) {
    chomp $subject;
    my $label = $subject;
    $label =~ s/\_/ /g;
    &_createSubjectNode($Ontology_doc, $subject, $label);
  }
  &_print_postamble($Ontology_doc);

  return $Ontology_doc->toString(1);
}

sub _addElement ($$$) {
  my ($doc, $p, $tag) = @_;

  my $new_node = $doc->createElement($tag);
  $p->addChild($new_node);

  return $new_node;
}

sub _createSubjectNode($$$$) {
    my ($doc, $id, $label) = @_;

    print STDERR " create Subject:[$id]\n" if $DEBUG;

    my $subject_node = $doc->createElement("owl:Class");
    $subject_node->setAttribute("rdf:ID", $id);
    $doc->documentElement()->addChild($subject_node);

    my $label_node = _addElement($doc,$subject_node,"rdfs:label");
    $label_node->addChild($doc->createTextNode($label));

    if ($ADD_SUBJECT_CLASS) {
       my $sub_subclass_elem = _addElement($doc,$subject_node,"rdfs:subClassOf");
       $sub_subclass_elem->setAttribute("rdf:resource","#Subject");
    }

   return $subject_node;
}


sub _print_preamble ($) {
   my ($doc) = @_;

   my $root = $doc->createElement("rdf:RDF");
   $doc->setDocumentElement($root);
   $root->setAttribute('xmlns:rdf', RDF_NS_URI);
   $root->setAttribute('xmlns:owl', OWL_NS_URI);
   $root->setAttribute('xmlns:rdfs',RDFS_NS_URI);
   $root->setAttribute('xmlns:xsd', XSD_NS_URI);
   $root->setAttribute('xmlns:xsi', XSI_NS_URI);

   #TODO : this should be added from the merged ontology part
   # $root->setAttribute('xmlns:ivoat', "http://net.ivoa/vocabulary/1.0/IVOAT#");

   $root->setAttribute('xmlns', $SUBJECT_NS_URI.'#');
   $root->setAttribute('xml:base', $SUBJECT_NS_URI);

   my $onto_decl = _addElement($doc,$root,"owl:Ontology");
   $onto_decl->setAttribute("rdf:about","");

#   my $onto_import_ucd = _addElement($doc,$onto_decl, "owl:imports");
#   $onto_import_ucd->setAttribute("rdf:resource",$UCD_NS_URI);

#   my $onto_import_reg = _addElement($doc,$onto_decl,"owl:imports");
#   $onto_import_reg->setAttribute("rdf:resource",$REGISTRY_ONTO_NS_URI);

   my $onto_comment = _addElement($doc,$onto_decl,"rdfs:comment");
   $onto_comment->setAttribute("rdf:datatype","http://www.w3.org/2001/XMLSchema#string");
   my $onto_comment_txt = $doc->createTextNode("Registry Subject Ontology. Generated by $0");
   $onto_comment->addChild($onto_comment_txt);

   if ($ADD_SUBJECT_CLASS) { 
     my $subject_decl = _addElement($doc,$root,"owl:Class");
     $subject_decl->setAttribute("rdf:ID","Subject");
   }

   #print STDERR $doc->toString(1);
   return $doc;
}

sub _print_postamble ($) {
   my ($doc) = @_;
#   my $root = $doc->documentElement();
#   $root->addChild( createObjPropNode($doc,"hasAvailableUcd", $UCD_NS_URI."#UCD","#Subject"));
#   $root->addChild( createObjPropNode($doc,"hasUCD", $UCD_NS_URI."#UCD",$REGISTRY_ONTO_NS_URI."#Resource"));
#   $root->addChild( createObjPropNode($doc,"hasResource", $REGISTRY_ONTO_NS_URI."#Resource", "#Subject"));
}
 
1;
